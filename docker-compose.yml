version: '2'

services:

  applications:
    image: tianon/true

### Workspace Utilities Container ###########################

  workspace:
    build:
      context: ./workspace
      args:
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - PGID=${WORKSPACE_PGID}
        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    networks:
      - frontend
      - backend

### Nginx Container #####################################

  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    volumes_from:
      - applications
    volumes:
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

### PHP Worker ############################################

  php-worker:
    build:
      context: ./php-worker
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_MONGO=${PHP_WORKER_INSTALL_MONGO}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    volumes:
      - ./php-worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - workspace
      - redis
      - mongo
      - rabbitmq
      - beanstalkd
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

### PHP-FPM Container #####################################

  php-fpm:
    build:
      context: ./php-fpm
      args:
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    depends_on:
      - mongo
      - mysql
    networks:
      - backend

### MongoDB Container #####################################

  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_SAVE_PATH}/mongo:/data/db
    networks:
      - backend

### MySQL Container #####################################

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

### Horizon Worker Container #####################################

  # horizon:
  #   build:
  #     context: ./horizon
  #     dockerfile: "Dockerfile-${PHP_VERSION}"
  #     args:
  #       - INSTALL_MONGO=${HORIZON_INSTALL_MONGO}
  #   volumes_from:
  #     - applications
  #   extra_hosts:
  #     - "dockerhost:${DOCKER_HOST_IP}"
  #   depends_on:
  #     - mysql
  #     - redis
  #     - nginx
  #   networks:
  #     - backend

### Redis Container #########################################

  redis:
    build: ./redis
    volumes:
      - ${DATA_SAVE_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

### Beanstalkd ###########################################

  beanstalkd:
    build: ./beanstalkd
    ports:
      - "${BEANSTALKD_HOST_PORT}:11300"
    privileged: true
    depends_on:
      - php-fpm
    networks:
      - backend

### Beanstalkd Console ###################################

  beanstalkd-console:
    build: ./beanstalkd-console
    ports:
      - "${BEANSTALKD_CONSOLE_HOST_PORT}:2080"
    depends_on:
      - beanstalkd
    networks:
      - backend

### RabbitMQ #############################################

  rabbitmq:
    build: ./rabbitmq
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - php-fpm
    networks:
      - backend

### Networks #####################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

volumes:
  mysql:
    driver: "local"
  redis:
    driver: "local"
  mongo:
    driver: "local"
